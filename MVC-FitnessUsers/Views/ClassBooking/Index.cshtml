@model MVC_FitnessUsers.Models.ClassBookingViewModel

@{ 
    var classes = Model.Classes;
}

<h2>Holdoversigt</h2>
@if (Model.IsLoggedIn && Model.User != null)
{
    <p>Hej @Model.User.Name</p>
}
else
{
    <p>Du er ikke logget ind, så det er ikke muligt at tilmelde sig nye hold</p>
}
<hr/>
<h3>Vælg søgekriterier</h3>
@using (Html.BeginForm("FilterClasses", "ClassBooking"))
{ 
            @*Strongly typed. Binder elementers value til en property op ViewModel. Giver hvert element en Bootstrap style class med*@
    <div class="row">
        <div class="col-md-3 form-group">
            @Html.LabelFor(m => m.Disciplines) <br/>
            @Html.DropDownListFor(m => m.SelectedDiscipline, new SelectList(Model.Disciplines.Select(d=> d.Name)), "Ikke valgt", new { @class="form-control"})
        </div>
        <div class="col-md-3 form-group">
            @Html.LabelFor(m=> m.Instructors)
            @Html.DropDownListFor(m => m.SelectedInstructor, new SelectList(Model.Instructors.Select(i => i.Name)), "Ikke valgt", new { @class="form-control"})
            <br/>
        </div>
        <div class="col-md-3 form-group">
            @Html.LabelFor(m => m.SelectedDate)<br/>
            @Html.TextBoxFor(m => m.SelectedDate, new { type = "date", @class="form-control" })
        </div>
        <div class="col-md-3 form-group">
            @Html.Label("")<br/>
            <input class="btn btn-info form-control" type="submit" name="submit" value="Søg hold"/>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>Tidspunkt</th>
        <th>Disciplin</th>
        <th>Instruktør</th>
        <th>Status</th>
    </tr>
    @foreach (var item in Model.Classes)
    {
        <tr>
            <td>@Html.DisplayName(item.Start.ToString())</td>
            <td>@Html.DisplayName(item.Discipline.Name)</td>
            <td>@Html.DisplayName(item.Instructor.Name)</td>
            <td>Status undefined</td>
        </tr>
    }
</table>
